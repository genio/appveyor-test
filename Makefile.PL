# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.009.
use strict;
use warnings;

use 5.008001;

use ExtUtils::MakeMaker;

use Config;
# Some options behave differently on Windows
sub WINLIKE () {
    return 1 if $^O eq 'MSWin32';
    # return 1 if $^O eq 'cygwin';
    return 1 if $^O eq 'msys';
    return '';
}
sub WINVER() {
    return undef unless WINLIKE();
    my $ver;
    my $err = do {
        local $@;
        eval { require Win32; $ver = Win32::GetOSName(); 1; };
        $@;
    };
    $ver = 'Win10' unless $ver; # just pick one if we couldn't find it
    if ($err) {
        warn "We had an error grabbing the Win32 OS Name: $err";
    }

    if ($ver =~ /^Win(?:Win32s|95|98|Me|NT4|NT3\.51|HomeSvr)/) {
        warn "This version of Windows is really old and we can't install here";
        exit(1);
    }
    return '0x0500' if $ver =~ /^Win2000/;
    return '0x0501' if $ver =~ /^WinXP\/\.Net/;
    return '0x0502' if $ver =~ /^Win2003/;
    return '0x0600' if $ver =~ /^Win(?:Vista|2008)/;
    return '0x0601' if $ver =~ /^Win7/;
    return '0x0603' if $ver =~ /^Win8\.1/;
    return '0x0602' if $ver =~ /^Win8/;
    return '0x0A00' if $ver =~ /^Win10/;

    warn "We couldn't determine the version of Windows you're on. -- $ver";
    return undef;

}
# make sure we actually get stuff back from Alien::libuv
sub TRIM {
    my $s = shift;
    return '' unless $s;
    $s =~ s/\A\s*//;
    $s =~ s/\s*\z//;
    return $s;
}

my @flags = ('-I.', $Config{ccflags});
if (my $ver = WINVER()) {
    push @flags, "-D_WINVER=$ver";
    push @flags, "-D_WIN32_WINNT=$ver";
    push @flags, "-D_WIN32_WINDOWS=$ver";
    push @flags, "-D_WIN32_IE=$ver";
}
use Data::Dumper; print Dumper \@flags; print "\n\n";
my %WriteMakefileArgs = (
  "ABSTRACT" => "Test App to try AppVeyor",
  "AUTHOR" => "Chase Whitener <capoeirab\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0
  },
  "DISTNAME" => "AppVeyor",
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.008001",
  "NAME" => "AppVeyor",
  "PREREQ_PM" => {
    "Carp" => 0,
    "strict" => 0,
    "utf8" => 0,
    "warnings" => 0
  },
  "TEST_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "Test::More" => "0.88",
  },
  "VERSION" => "0.000001",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Carp" => 0,
  "ExtUtils::MakeMaker" => 0,
  "Test::More" => "0.88",
  "strict" => 0,
  "utf8" => 0,
  "warnings" => 0
);


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

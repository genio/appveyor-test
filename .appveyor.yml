version: '{build}'
shallow_clone: true

environment:
  matrix:
    - perl_type: system
    - perl_type: strawberry
      perl_version: 5.26.1.1
    - perl_type: cygwin

build_script:
- ps: >-
    echo $([environment]::OSVersion.VersionString);

    if ($Env:perl_type -eq $null) { $Env:perl_type="system"; }
    if ($Env:perl_type -eq "system") {
      if ((Test-Path -path "C:\Perl64\bin") -and (Test-Path -path "C:\Perl64\site\bin")) {
        $Env:PATH = "C:\Perl64\site\bin\;C:\Perl64\bin\;${Env:PATH}"
      }
      elseif ((Test-Path -path "C:\Perl\bin") -and (Test-Path -path "C:\Perl\site\bin")) {
        $Env:PATH = "C:\Perl\site\bin\;C:\Perl\bin\;${Env:PATH}"
      }
      else { Write-Error "No valid system perl found"; Exit(1); }
      ppm install mingw dmake App::cpanminus;
      if (-not $?) { Write-Error "PPM install failed."; Exit(1); }
    }
    elseif ($Env:perl_type -eq "strawberry") {
      cinst -y StrawberryPerl --version $Env:perl_version;
      if (-not $?) { Write-Error "choco strawberry failed"; Exit(1); }
      $Env:PATH = "C:\Strawberry\perl\site\bin;C:\Strawberry\perl\bin;C:\Strawberry\c\bin;${Env:PATH}";
    }
    elseif ($Env:perl_type eq "cygwin") {
      if ((Test-Path -path "C:\cygwin64\setup-x86_64.exe")) {
        cmd /c C:\cygwin64\setup-x86_64.exe -q -g -P perl -P make -P gcc -P gcc-g++ -P libcrypt-devel -P openssl-devel -P autoconf -P automake -P libtool -P curl
        if (-not $?) { Write-Error "cygwin64 setup failed"; Exit(1); }
        $Env:PATH = "PATH=C:\cygwin64\usr\local\bin;C:\cygwin64\bin;${Env:PATH}";
      }
      elseif ((Test-Path -path "C:\cygwin\setup-x86.exe")) {
        cmd /c C:\cygwin64\setup-x86.exe -q -g -P perl -P make -P gcc -P gcc-g++ -P libcrypt-devel -P openssl-devel -P autoconf -P automake -P libtool -P curl
        if (-not $?) { Write-Error "cygwin setup failed"; Exit(1); }
        $Env:PATH = "PATH=C:\cygwin64\usr\local\bin;C:\cygwin64\bin;${Env:PATH}";
        perl -MCPAN -E 'CPAN::Shell->install(q(App::cpanminus))'
      }
      else { Exit(1); }
    }
    else { Exit(1); }

test_script:
- ps: >-
    perl -V;

    echo "Path to make: $(perl -MConfig -E 'say $Config{make}')";
    cpanm --installdeps -n .;
    cpanm .
